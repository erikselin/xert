#!/bin/bash

set -e
set +x

ROOT=$(dirname "${BASH_SOURCE[0]}" )

cores=4
records=1000

memory=(
	"16m" # 1m per buffer
	"16k" # 1k per buffer
)

modes=(
	"uniform"
	"skewed"
)

keys=(
	"short"
	"long"
)

size=$(($records/$cores))

for mode in "${modes[@]}"; do
	for key in "${keys[@]}"; do
		dataset=$ROOT/data-$mode-$key
		log=$ROOT/log-generate-$mode-$key
		rm -f -r $dataset
		rm -f $log
		$ROOT/../xrt --mappers $cores \
					 --mapper "python3 $ROOT/generate/map.py $mode $keys $size" \
					 --output $dataset &> $log

		for mem in "${memory[@]}"; do
			tst=string-search
			echo "=== RUN   $tst-$mode-$key-$mem"
			output=$ROOT/output-$tst-$mode-$key-$mem
			log=$ROOT/log-$tst-$mode-$key-$mem.log
			rm -f -r $output
			rm -f $log
			$ROOT/../xrt --mappers $cores \
						 --memory $mem \
						 --input "$dataset/*" \
						 --mapper "python3 $ROOT/$tst/map.py" \
						 --output $output &> $log
			if python3 $ROOT/$tst/check.py $dataset $output; then
				runtime="$(cat $log | grep "total runtime" | sed "s/.*total runtime: \(.*\)/\1/")"
				echo "--- PASS: $tst-$mode-$key-$mem ($runtime)"
			else
				echo "--- FAIL: $tst-$dataset-$mem"
				exit 1
			fi

			tst=word-count
			echo "=== RUN   $tst-$mode-$key-$mem"
			output=$ROOT/output-$tst-$mode-$key-$mem
			log=$ROOT/log-$tst-$mode-$key-$mem.log
			rm -f -r $output
			rm -f $log
			$ROOT/../xrt --mappers $cores \
                         --reducers $cores \
						 --memory $mem \
						 --input "$dataset/*" \
						 --mapper "python3 $ROOT/$tst/map.py" \
						 --reducer "python3 $ROOT/$tst/reduce.py" \
						 --output $output &> $log
			if python3 $ROOT/$tst/check.py $dataset $output; then
				runtime="$(cat $log | grep "total runtime" | sed "s/.*total runtime: \(.*\)/\1/")"
				echo "--- PASS: $tst-$mode-$key-$mem ($runtime)"
			else
				echo "--- FAIL: $tst-$dataset-$mem"
				exit 1
			fi

			tst=parallel-sort
			echo "=== RUN   $tst-$mode-$key-$mem"
			output=$ROOT/output-$tst-$mode-$key-$mem
			log=$ROOT/log-$tst-$mode-$key-$mem.log
			rm -f -r $output
			rm -f $log
			$ROOT/../xrt --mappers $cores \
                         --reducers $cores \
						 --memory $mem \
						 --input "$dataset/*" \
						 --mapper "python3 $ROOT/$tst/map.py" \
						 --reducer "python3 $ROOT/$tst/reduce.py" \
						 --output $output &> $log
			if python3 $ROOT/$tst/check.py $dataset $output; then
				runtime="$(cat $log | grep "total runtime" | sed "s/.*total runtime: \(.*\)/\1/")"
				echo "--- PASS: $tst-$mode-$key-$mem ($runtime)"
			else
				echo "--- FAIL: $tst-$dataset-$mem"
				exit 1
			fi
		done
	done
done

echo "PASS"
echo "ok  	integration tests"
